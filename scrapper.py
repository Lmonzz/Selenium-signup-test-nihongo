# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class Test2():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def test_2(self, a, b, c):
    with open(a, "r") as f:
      tc = [line.strip().split(",") for line in f]
    print(tc)

    with open(b, "r", encoding="utf-8") as f:
        eo = [line.strip() for line in f]
    f.close()
    print(eo) 

    self.driver.get("http://nihongomastery.atwebpages.com/")
    self.driver.set_window_size(1232, 816)

    f = open(c, 'w')
    f.close()
    
    self.driver.find_element(By.CSS_SELECTOR, "a > b").click()
    time.sleep(3)
    
    for i, tci in enumerate(tc):
        n1, n2, n3, n4, n5 = tci

        self.driver.find_element(By.ID, "txtName").clear()
        self.driver.find_element(By.ID, "txtName").send_keys(n1)
        self.driver.find_element(By.ID, "txtPhone").clear()
        self.driver.find_element(By.ID, "txtPhone").send_keys(n2)
        self.driver.find_element(By.ID, "txtEmail").clear()
        self.driver.find_element(By.ID, "txtEmail").send_keys(n3)
        self.driver.find_element(By.ID, "txtPassword").clear()
        self.driver.find_element(By.ID, "txtPassword").send_keys(n4)
        self.driver.find_element(By.ID, "txtconfirmPassword").clear()
        self.driver.find_element(By.ID, "txtconfirmPassword").send_keys(n5)
        time.sleep(5) 
        self.driver.find_element(By.CSS_SELECTOR, ".btn").click()
        time.sleep(5)
        message = WebDriverWait(self.driver, 20).until(
          EC.presence_of_element_located((By.CSS_SELECTOR, "p[style*='color: red']"))
        )
        if message.text == eo[i]:
            rs = f"Test case [{i}] passed"
        else:
            rs = f"Test case [{i}] failed"
        print(rs)
        with open(c, "a") as f:  
          f.write(f"\n{rs}")
        
        
       
    self.driver.close()
  
t2 = Test2()
t2.setup_method(open)
t2.test_2("TestCaseInput.txt", "TestCaseOutput.txt", "TestCaseResult.txt")
t2.teardown_method(quit)